# 设置终端类型为256色
# set -g default-terminal "screen-256color"

# Enable italic font in iterm2
# Refer to http://apple.stackexchange.com/questions/249307/tic-doesnt-read-from-stdin-and-segfaults-when-adding-terminfo-to-support-italic/249385
set -g default-terminal "tmux-256color"
set -as terminal-overrides ',xterm*:sitm=\E[3m'

# Re numbering windows when close window

unbind-key C-b
set-option -g prefix C-s
bind-key C-s send-prefix
bind-key c  new-window -c "#{pane_current_path}"

set -g base-index 1
set -g renumber-windows on
set -g pane-base-index 1
set-option -g base-index 1
set-window-option -g pane-base-index 1

set-window-option -g mode-keys vi

set-option -g display-time 5000                 # 提示信息的持续时间；设置足够的时间以避免看不清提示，单位为毫秒
set-option -g repeat-time 1000                  # 控制台激活后的持续时间；设置合适的时间以避免每次操作都要先激活控制台，单位为毫秒
set-option -g status-keys vi                    # 操作状态栏时的默认键盘布局；可以设置为vi或emacs

bind _ split-window -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"
bind s set synchronize-panes
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

bind-key tab last-window
bind-key -r n select-window -n
bind-key -r N select-window -p

unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer

set -s escape-time 0
set-window-option -g xterm-keys on

set-option -g status on
set-option -g status-interval 2
set-option -g status-justify "centre"
set-window-option -g window-status-format '#I:#W@#(dir="#{pane_current_path}"; echo ${dir####*/})'
set-window-option -g window-status-current-format '#[fg=colour255, bg=colour27] #I:#W@#(dir="#{pane_current_path}"; echo ${dir####*/})'
set-option -g status-position top

set -g @shell_mode 'vi'
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$|emacs.*$' && tmux send-keys C-h) || tmux list-panes -F '#F' | grep -q Z || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$|emacs.*$' && tmux send-keys C-j) || tmux list-panes -F '#F' | grep -q Z || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$|emacs.*$' && tmux send-keys C-k) || tmux list-panes -F '#F' | grep -q Z || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$|emacs.*$' && tmux send-keys C-l) || tmux list-panes -F '#F' | grep -q Z || tmux select-pane -R"

# List of plugins
#set -g @plugin 'tmux-plugins/tpm'
#set -g @plugin 'tmux-plugins/tmux-sensible'
#set -g @plugin 'tmux-plugins/tmux-copycat'
#run -b '~/.tmux/plugins/tpm/tpm'
